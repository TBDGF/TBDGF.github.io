<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>[python]爬虫实战-爬取豆瓣小组信息&amp;自动化处理验证码</title>
    <link href="/2021/08/20/%5Bpython%5D%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3%E5%B0%8F%E7%BB%84%E4%BF%A1%E6%81%AF&amp;%E8%87%AA%E5%8A%A8%E5%8C%96%E5%A4%84%E7%90%86%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
    <url>/2021/08/20/%5Bpython%5D%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3%E5%B0%8F%E7%BB%84%E4%BF%A1%E6%81%AF&amp;%E8%87%AA%E5%8A%A8%E5%8C%96%E5%A4%84%E7%90%86%E9%AA%8C%E8%AF%81%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>本文会介绍如何编写豆瓣爬虫，及相对应的验证码处理</p><p>本博客不会介绍一些比较基础的信息，需要读者自己学习，比如python的异步库asyncio</p><span id="more"></span><p>写代码好累</p><p>不要靠近编程，会让人不幸</p><p><img src="/img/meme-tired.jpg" alt="meme-tired" /></p><h1 id="第三方库选型"><a class="markdownIt-Anchor" href="#第三方库选型"></a> 第三方库选型</h1><h2 id="web库选型-aiohttp"><a class="markdownIt-Anchor" href="#web库选型-aiohttp"></a> web库选型 - aiohttp</h2><p>aiohttp可以看作requests的异步版本，同时支持客户端和服务端，继承requests简洁、明了的优点同时，又不易阻塞（虽然有时候该阻还是会阻会儿）</p><p><a href="https://docs.aiohttp.org/en/stable/">aiohttp官网</a></p><p>简单实现:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> aiohttp<br><span class="hljs-keyword">import</span> asyncio<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br><br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> aiohttp.ClientSession() <span class="hljs-keyword">as</span> session:<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> session.get(<span class="hljs-string">&#x27;http://python.org&#x27;</span>) <span class="hljs-keyword">as</span> response:<br><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Status:&quot;</span>, response.status)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Content-type:&quot;</span>, response.headers[<span class="hljs-string">&#x27;content-type&#x27;</span>])<br><br>            html = <span class="hljs-keyword">await</span> response.text()<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Body:&quot;</span>, html[:<span class="hljs-number">15</span>], <span class="hljs-string">&quot;...&quot;</span>)<br><br>loop = asyncio.get_event_loop()<br>loop.run_until_complete(main())<br></code></pre></td></tr></table></figure><p>同时，我们也不会放弃使用requests，可以用它来处理一些简单的中间请求</p><h2 id="html库-beautiful-soup"><a class="markdownIt-Anchor" href="#html库-beautiful-soup"></a> HTML库 - Beautiful Soup</h2><p>Beautiful Soup 是一个可以从HTML或XML文件中提取数据的Python库.它能够通过你喜欢的转换器实现惯用的文档导航,查找,修改文档的方式.Beautiful Soup会帮你节省数小时甚至数天的工作时间.</p><p><a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/">Beautiful Soup 中文文档 </a></p><p>简单实现:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><br>soup = BeautifulSoup(html_text, <span class="hljs-string">&#x27;lxml&#x27;</span>)<span class="hljs-comment">#html_text为html字符串</span><br>link_elements = soup.find_all(<span class="hljs-string">&quot;a&quot;</span>)<br><br></code></pre></td></tr></table></figure><h2 id="ocr库-pytesseract"><a class="markdownIt-Anchor" href="#ocr库-pytesseract"></a> OCR库 - pytesseract</h2><p>Tesseract 是一个开源的ocr引擎，可以开箱即用，项目最初由惠普实验室支持，1996年被移植到Windows上，1998年进行了C++化。在2005年Tesseract 由惠普公司宣布开源。2006年到现在，都由Google公司开发。</p><p><a href="https://github.com/tesseract-ocr/tesseract/">仓库地址</a></p><p>pytesseract 则是Tesseract 的python接口库，pytesseract只是接口，我们需在本地单独安装Tesseract</p><p>我们使用pytesseract 库需要借助PIL(Python Image Library)库，该库提供了基本的图像处理功能</p><p>简单实现:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span>  PIL <span class="hljs-keyword">import</span>  Image<br><span class="hljs-keyword">import</span> pytesseract<br><br>img = Image.<span class="hljs-built_in">open</span>(img_path)<br>text = pytesseract.image_to_string(img,lang=<span class="hljs-string">&#x27;eng&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="mysql库-pymysql"><a class="markdownIt-Anchor" href="#mysql库-pymysql"></a> MySQL库 - pymysql</h2><p>PyMySQL 是在 Python3.x 版本中用于连接 MySQL 服务器的一个库，Python2中则使用mysqldb。</p><p><a href="https://www.runoob.com/python3/python3-mysql.html">pymysql-菜鸟教程</a></p><p>简单实现:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python3</span><br> <br><span class="hljs-keyword">import</span> pymysql<br> <br><span class="hljs-comment"># 打开数据库连接</span><br>db = pymysql.connect(<span class="hljs-string">&quot;localhost&quot;</span>,<span class="hljs-string">&quot;testuser&quot;</span>,<span class="hljs-string">&quot;test123&quot;</span>,<span class="hljs-string">&quot;TESTDB&quot;</span> )<br> <br><span class="hljs-comment"># 使用 cursor() 方法创建一个游标对象 cursor</span><br>cursor = db.cursor()<br> <br><span class="hljs-comment"># 使用 execute()  方法执行 SQL 查询 </span><br>cursor.execute(<span class="hljs-string">&quot;SELECT VERSION()&quot;</span>)<br> <br><span class="hljs-comment"># 使用 fetchone() 方法获取单条数据.</span><br>data = cursor.fetchone()<br> <br><span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;Database version : %s &quot;</span> % data)<br> <br><span class="hljs-comment"># 关闭数据库连接</span><br>db.close()<br></code></pre></td></tr></table></figure><h2 id="工具库"><a class="markdownIt-Anchor" href="#工具库"></a> 工具库</h2><h3 id="dateutil"><a class="markdownIt-Anchor" href="#dateutil"></a> dateutil</h3><p>一个方便，开箱即用的时间转换库，帮助我们处理时间</p><p><a href="https://pypi.org/project/python-dateutil/">pypi地址</a></p><p>简单实现:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> dateutil.parser <span class="hljs-keyword">import</span> parse<br> <br><span class="hljs-meta">&gt;&gt;&gt; </span>parse(<span class="hljs-string">&quot;2018-10-21&quot;</span>)<br>datetime.datetime(<span class="hljs-number">2018</span>, <span class="hljs-number">10</span>, <span class="hljs-number">21</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br> <br><span class="hljs-meta">&gt;&gt;&gt; </span>parse(<span class="hljs-string">&quot;20181021&quot;</span>)<br>datetime.datetime(<span class="hljs-number">2018</span>, <span class="hljs-number">10</span>, <span class="hljs-number">21</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br> <br><span class="hljs-meta">&gt;&gt;&gt; </span>parse(<span class="hljs-string">&quot;2018/10/21&quot;</span>)<br>datetime.datetime(<span class="hljs-number">2018</span>, <span class="hljs-number">10</span>, <span class="hljs-number">21</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br> <br><span class="hljs-meta">&gt;&gt;&gt; </span>parse(<span class="hljs-string">&quot;10-21&quot;</span>)<br>datetime.datetime(<span class="hljs-number">2018</span>, <span class="hljs-number">10</span>, <span class="hljs-number">21</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br> <br><span class="hljs-meta">&gt;&gt;&gt; </span>parse(<span class="hljs-string">&quot;10/21&quot;</span>)<br>datetime.datetime(<span class="hljs-number">2018</span>, <span class="hljs-number">10</span>, <span class="hljs-number">21</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><h1 id="设计思路"><a class="markdownIt-Anchor" href="#设计思路"></a> 设计思路</h1><h2 id="总流程"><a class="markdownIt-Anchor" href="#总流程"></a> 总流程</h2><pre><code class=" mermaid">graph TB小组的原始积累--&gt;小组列表待添加小组列表--&gt;小组列表小组列表--处理验证码--&gt;遍历小组</code></pre><h2 id="获取信息"><a class="markdownIt-Anchor" href="#获取信息"></a> 获取信息</h2><pre><code class=" mermaid">graph LR获取信息--&gt;获取成功获取信息--&gt;获取失败获取失败--&gt;验证码处理--&gt;流程结束获取成功--&gt;流程结束--循环结构--&gt;获取信息</code></pre><h2 id="验证码处理"><a class="markdownIt-Anchor" href="#验证码处理"></a> 验证码处理</h2><p>由于豆瓣验证码并非可以直接OCR的图片，所以我们需要进行一些处理</p><p>Before:</p><p><img src="/img/captcha-before.jijf" alt="captha-before" /></p><p>After:</p><p><img src="/img/captcha-after.jpg" alt="captha-after" /></p><pre><code class=" mermaid">graph LR获取验证码图片--&gt;二值化去除背景--&gt;去除噪点--&gt;执行OCR--&gt;模拟提交表单</code></pre><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><h2 id="预定义常量"><a class="markdownIt-Anchor" href="#预定义常量"></a> 预定义常量</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 请求头</span><br>headers = &#123;<br>    <span class="hljs-string">&quot;User-Agent&quot;</span>: Secret.USER_AGENT,<br>    <span class="hljs-string">&quot;Cookie&quot;</span>: Secret.COOKIE<br>&#125;<br><br><span class="hljs-comment"># 数据库连接</span><br>conn = pymysql.connect(host=<span class="hljs-string">&quot;localhost&quot;</span>, user=Secret.DB_USER, password=Secret.DB_PASSWORD, database=<span class="hljs-string">&quot;doubantest&quot;</span>, port=<span class="hljs-number">3306</span>,<br>                       charset=<span class="hljs-string">&quot;utf8mb4&quot;</span>)<br>cursor = conn.cursor()<br><br><span class="hljs-comment"># 表单Body</span><br>form = &#123;<br>    <span class="hljs-string">&quot;ck&quot;</span>: <span class="hljs-string">&quot;Un0d&quot;</span>,<br>    <span class="hljs-string">&quot;captcha-solution&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-string">&quot;captcha-id&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-string">&quot;original-url&quot;</span>: <span class="hljs-string">&quot;https://www.douban.com/group/&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="主函数"><a class="markdownIt-Anchor" href="#主函数"></a> 主函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> traceback<br><span class="hljs-keyword">from</span> asyncio <span class="hljs-keyword">import</span> sleep<br><span class="hljs-keyword">import</span> pymysql<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-keyword">import</span> aiohttp<br><span class="hljs-keyword">import</span> asyncio<br><span class="hljs-keyword">from</span> dateutil.parser <span class="hljs-keyword">import</span> parse<br><span class="hljs-keyword">from</span> dateutil.relativedelta <span class="hljs-keyword">import</span> relativedelta<br><span class="hljs-keyword">import</span> datetime<br><span class="hljs-keyword">import</span> PostSolution<br><span class="hljs-keyword">import</span> Secret<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> aiohttp.ClientSession() <span class="hljs-keyword">as</span> session:<br>        group_list = <span class="hljs-keyword">await</span> get_group_id_list()  <span class="hljs-comment"># 从数据库读取小组列表</span><br>        <span class="hljs-comment"># await PostSolution.main()</span><br>        <span class="hljs-keyword">for</span> index, group_id <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(group_list):<br>            <span class="hljs-comment"># if index&lt;=786:</span><br>            <span class="hljs-comment">#     continue</span><br>            member = <span class="hljs-keyword">await</span> get_group_member(session, group_id)  <span class="hljs-comment"># 获取小组人数</span><br>            <span class="hljs-built_in">print</span>(group_id, member)<br>            <span class="hljs-built_in">sum</span> = <span class="hljs-keyword">await</span> get_group_comment(session, group_id)    <span class="hljs-comment"># 获取该小组讨论数</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-built_in">sum</span>)<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">sum</span> &lt;= <span class="hljs-number">100</span>:<br>                <span class="hljs-keyword">await</span> delete_group_list_by_group_id(group_id)   <span class="hljs-comment"># 如果讨论数小于100，则从数据库中删除</span><br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">await</span> insert_group_info(group_id, member, <span class="hljs-built_in">sum</span>)  <span class="hljs-comment"># 将信息插入数据库</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;fetch over&quot;</span>)<br>        <span class="hljs-keyword">await</span> clean_group_info()    <span class="hljs-comment"># 清理无效小组信息</span><br>        <span class="hljs-keyword">await</span> replace_group_ranked()    <span class="hljs-comment"># 对小组排名并存进数据库，减少服务器压力</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    loop = asyncio.get_event_loop()<br>    loop.run_until_complete(main())<br></code></pre></td></tr></table></figure><h3 id="获取小组人数"><a class="markdownIt-Anchor" href="#获取小组人数"></a> 获取小组人数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_group_member</span>(<span class="hljs-params">session, group_id</span>):</span><br>    url = <span class="hljs-string">&quot;https://www.douban.com/group/&#123;0&#125;/&quot;</span>.<span class="hljs-built_in">format</span>(group_id)<br>    success = <span class="hljs-literal">None</span><br>    is_denied = <span class="hljs-literal">None</span><br>    cnt = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> success <span class="hljs-keyword">or</span> is_denied:  <span class="hljs-comment"># 循环结构</span><br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> session.get(url, headers=headers) <span class="hljs-keyword">as</span> response:  <span class="hljs-comment"># 获取网页HTML</span><br>                is_denied = response.url.__str__()[:<span class="hljs-number">33</span>] == <span class="hljs-string">&quot;https://www.douban.com/misc/sorry&quot;</span>  <span class="hljs-comment"># 判断是否被拒绝</span><br>                <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> is_denied:  <span class="hljs-comment"># 如果没有被拒绝，则获取网页元素</span><br>                    text = <span class="hljs-keyword">await</span> response.text()<br>                    soup = BeautifulSoup(text, <span class="hljs-string">&quot;lxml&quot;</span>)<br>                    member_element = soup.select(<br>                        <span class="hljs-string">&quot;#content &gt; div.grid-16-8.clearfix &gt; div.aside &gt; div.mod.side-nav &gt; p:nth-child(1) &gt; a&quot;</span>)<br>                    is_denied = <span class="hljs-built_in">len</span>(member_element) &lt;= <span class="hljs-number">0</span><br>                <span class="hljs-keyword">if</span> is_denied:  <span class="hljs-comment"># 如果被拒绝，则提交验证码，再次循环</span><br>                    <span class="hljs-keyword">await</span> PostSolution.main()<br>                    <span class="hljs-keyword">continue</span><br><br>                text = <span class="hljs-keyword">await</span> response.text()<br>                soup = BeautifulSoup(text, <span class="hljs-string">&quot;lxml&quot;</span>)<br>                member_element = soup.select(  <span class="hljs-comment"># 获取小组人数</span><br>                    <span class="hljs-string">&quot;#content &gt; div.grid-16-8.clearfix &gt; div.aside &gt; div.mod.side-nav &gt; p:nth-child(1) &gt; a&quot;</span>)<br><br>                <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(member_element) &lt;= <span class="hljs-number">0</span>:  <span class="hljs-comment"># 如果没获取到人数，计数重复3次，如果失败则返回-1</span><br>                    cnt += <span class="hljs-number">1</span><br>                    <span class="hljs-keyword">if</span> cnt &lt;= <span class="hljs-number">3</span>:<br>                        <span class="hljs-keyword">await</span> sleep(<span class="hljs-number">0.5</span>)<br>                    <span class="hljs-keyword">else</span>:<br>                        <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span><br>                <span class="hljs-keyword">else</span>:<br>                    member_text = member_element[<span class="hljs-number">0</span>].get_text()<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">eval</span>(member_text[member_text.index(<span class="hljs-string">&quot;(&quot;</span>) + <span class="hljs-number">1</span>:-<span class="hljs-number">1</span>]) <span class="hljs-comment"># 返回小组人数</span><br>        <span class="hljs-keyword">except</span>:<br>            success = <span class="hljs-literal">None</span><br></code></pre></td></tr></table></figure><h3 id="获取小组讨论"><a class="markdownIt-Anchor" href="#获取小组讨论"></a> 获取小组讨论</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_group_comment</span>(<span class="hljs-params">session, group_id</span>):</span><br>    success = <span class="hljs-literal">None</span><br>    is_denied = <span class="hljs-literal">None</span><br>    next_start = <span class="hljs-number">0</span><br>    comment_sum = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> success <span class="hljs-keyword">or</span> is_denied: <span class="hljs-comment"># 循环结构</span><br>        url = <span class="hljs-string">&quot;https://www.douban.com/group/&#123;0&#125;/discussion?start=&#123;1&#125;&quot;</span>.<span class="hljs-built_in">format</span>(group_id, next_start)<br>        <span class="hljs-keyword">await</span> sleep(<span class="hljs-number">0.5</span>)<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> session.get(url, headers=headers) <span class="hljs-keyword">as</span> response: <span class="hljs-comment"># 获取网页HTML</span><br>                is_denied = response.url.__str__()[:<span class="hljs-number">33</span>] == <span class="hljs-string">&quot;https://www.douban.com/misc/sorry&quot;</span>  <span class="hljs-comment"># 判断是否被拒绝</span><br>                <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> is_denied:   <span class="hljs-comment"># 如果没有被拒绝，则获取网页元素</span><br>                    text = <span class="hljs-keyword">await</span> response.text()<br>                    soup = BeautifulSoup(text, <span class="hljs-string">&quot;lxml&quot;</span>)<br>                    comment_elements = soup.find_all(<span class="hljs-string">&quot;td&quot;</span>, attrs=&#123;<span class="hljs-string">&quot;class&quot;</span>: <span class="hljs-string">&quot;r-count&quot;</span>&#125;)[<span class="hljs-number">1</span>:]<br>                    time_elements = soup.find_all(<span class="hljs-string">&quot;td&quot;</span>, attrs=&#123;<span class="hljs-string">&quot;class&quot;</span>: <span class="hljs-string">&quot;time&quot;</span>&#125;)<br>                    is_denied = <span class="hljs-built_in">len</span>(comment_elements) &lt;= <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> <span class="hljs-built_in">len</span>(time_elements) &lt;= <span class="hljs-number">0</span><br>                <span class="hljs-keyword">if</span> is_denied:   <span class="hljs-comment"># 如果被拒绝，则提交验证码，再次循环</span><br>                    <span class="hljs-keyword">await</span> PostSolution.main()<br>                    <span class="hljs-keyword">continue</span><br><br>                over_time = <span class="hljs-literal">False</span><br>                <span class="hljs-keyword">for</span> index, comment <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(comment_elements):  <span class="hljs-comment"># 判断评论是否过期并计数</span><br>                    time = parse(time_elements[index].get_text())<br>                    NOW = datetime.datetime.now()<br>                    text = comment.get_text()<br>                    <span class="hljs-keyword">if</span> time &gt; NOW + relativedelta(weeks=-<span class="hljs-number">1</span>):<br>                        <span class="hljs-keyword">if</span> text.isdigit():<br>                            num = <span class="hljs-built_in">eval</span>(text <span class="hljs-keyword">if</span> text != <span class="hljs-string">&quot;&quot;</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&quot;1&quot;</span>)<br>                            comment_sum += num <span class="hljs-keyword">if</span> num &lt;= <span class="hljs-number">1000</span> <span class="hljs-keyword">else</span> <span class="hljs-number">0</span><br>                    <span class="hljs-keyword">else</span>:<br>                        over_time = <span class="hljs-literal">True</span><br>                <span class="hljs-built_in">print</span>(next_start)<br><br>                <span class="hljs-comment"># 获取下一页地址</span><br>                next_start_element = soup.select(<span class="hljs-string">&quot;#content &gt; div &gt; div.article &gt; div.paginator &gt; span.next &gt; a&quot;</span>)<br>                is_end = <span class="hljs-built_in">len</span>(next_start_element) &lt;= <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> over_time<br><br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> is_end:  <span class="hljs-comment"># 判断是否还有下一页，如果没有，结束循环</span><br>                next_start = next_start_element[<span class="hljs-number">0</span>].get(<span class="hljs-string">&#x27;href&#x27;</span>)<br>                next_start = next_start[next_start.index(<span class="hljs-string">&quot;=&quot;</span>) + <span class="hljs-number">1</span>:]<br>            <span class="hljs-keyword">else</span>:<br>                success = <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">except</span>:<br>            success = <span class="hljs-literal">None</span><br><br>    <span class="hljs-keyword">return</span> comment_sum<br></code></pre></td></tr></table></figure><h2 id="发送验证码"><a class="markdownIt-Anchor" href="#发送验证码"></a> 发送验证码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-keyword">import</span> aiohttp<br><span class="hljs-keyword">import</span> asyncio<br><br><span class="hljs-keyword">import</span> ImageOCR<br><span class="hljs-keyword">import</span> Secret<br><br>headers = &#123;<br>    <span class="hljs-string">&quot;User-Agent&quot;</span>: Secret.USER_AGENT,<br>    <span class="hljs-string">&quot;Cookie&quot;</span>: Secret.COOKIE,<br>    <span class="hljs-string">&quot;Host&quot;</span>: <span class="hljs-string">&quot;www.douban.com&quot;</span>,<br>    <span class="hljs-string">&quot;Origin&quot;</span>: <span class="hljs-string">&quot;https://www.douban.com&quot;</span>,<br>    <span class="hljs-string">&quot;Referer&quot;</span>: <span class="hljs-string">&quot;https://www.douban.com/misc/sorry?original-url=https://www.douban.com/group/&quot;</span>,<br>    <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span><br>&#125;<br><br>form = &#123;<br>    <span class="hljs-string">&quot;ck&quot;</span>: <span class="hljs-string">&quot;Un0d&quot;</span>,<br>    <span class="hljs-string">&quot;captcha-solution&quot;</span>: <span class="hljs-string">&quot;money&quot;</span>,<br>    <span class="hljs-string">&quot;captcha-id&quot;</span>: <span class="hljs-string">&quot;iLO5m9Y0xdMKXkSzW8ML5Tqr:en&quot;</span>,<br>    <span class="hljs-string">&quot;original-url&quot;</span>: <span class="hljs-string">&quot;https://www.douban.com/group/&quot;</span><br>&#125;<br><br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fetch</span>(<span class="hljs-params">session</span>):</span><br>    url = <span class="hljs-string">&quot;https://www.douban.com/misc/sorry&quot;</span><br>    is_access = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> is_access: <span class="hljs-comment"># 循环，上一次的结果在下一次循环时提交</span><br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> session.post(url, headers=headers, data=form) <span class="hljs-keyword">as</span> response:<br><br>                <span class="hljs-keyword">if</span> response.url.__str__()[:<span class="hljs-number">33</span>] != <span class="hljs-string">&quot;https://www.douban.com/misc/sorry&quot;</span>:<br>                    is_access = <span class="hljs-literal">True</span><br><br>                <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> is_access:<br>                    text = <span class="hljs-keyword">await</span> response.text()<br>                    soup = BeautifulSoup(text, <span class="hljs-string">&quot;lxml&quot;</span>)<br>                    img_elements = soup.find_all(<span class="hljs-string">&quot;img&quot;</span>)<br>                    img_src = img_elements[<span class="hljs-number">0</span>].get(<span class="hljs-string">&#x27;src&#x27;</span>) <span class="hljs-comment"># 获取图片地址</span><br>                    img_id = img_src[<span class="hljs-number">39</span>:]   <span class="hljs-comment"># 获取图片id</span><br><br>                    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;list/captcha.jfif&quot;</span>, <span class="hljs-string">&#x27;wb+&#x27;</span>) <span class="hljs-keyword">as</span> f: <span class="hljs-comment"># 保存图片到本地</span><br>                        res = requests.get(img_src, headers=headers)<br>                        f.write(res.content)<br>                        f.close()<br>                    img = ImageOCR.Img()    <span class="hljs-comment"># 执行OCR</span><br>                    solution = img.deocr()<br><br>                form[<span class="hljs-string">&#x27;captcha-solution&#x27;</span>] = solution<br>                form[<span class="hljs-string">&#x27;captcha-id&#x27;</span>] = img_id<br>                <span class="hljs-built_in">print</span>(form)<br>        <span class="hljs-keyword">except</span>:<br>            is_access = <span class="hljs-literal">None</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;access&quot;</span>)<br><br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> aiohttp.ClientSession() <span class="hljs-keyword">as</span> session:<br>        <span class="hljs-keyword">await</span> fetch(session)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    loop = asyncio.get_event_loop()<br>    loop.run_until_complete(main())<br><br></code></pre></td></tr></table></figure><h2 id="ocr"><a class="markdownIt-Anchor" href="#ocr"></a> OCR</h2><p>懒得写了现在，有时间再补吧</p>]]></content>
    
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>爬虫</tag>
      
      <tag>OCR</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[Tampermonkey]Edge油猴插件安装教程</title>
    <link href="/2021/08/08/%5BTampermonkey%5D%20Edge%E6%B2%B9%E7%8C%B4%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <url>/2021/08/08/%5BTampermonkey%5D%20Edge%E6%B2%B9%E7%8C%B4%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>本文旨在帮助读者进行油猴插件的安装，由于Edge平台没有需要翻墙的阻碍，所以我们选择他进行介绍</p><span id="more"></span><h2 id="从应用商店安装油猴"><a class="markdownIt-Anchor" href="#从应用商店安装油猴"></a> 从应用商店安装油猴</h2><p>使用最新版的Edge浏览器</p><p>打开<a href="https://microsoftedge.microsoft.com/addons/detail/tampermonkey/iikmkjmpaadaobahmlepeloendndfphd?source=sfw">Tampermonkey - Microsoft Edge Addons</a>，并进行安装</p><p><img src="/img/image-20210808173309417.png" alt="image-20210808173309417" /></p><p>安装成功后，应该可以从右上角看到插件的图标</p><p><img src="/img/image-20210808173555488.png" alt="image-20210808173555488" /></p><h2 id="从脚本网站加载脚本"><a class="markdownIt-Anchor" href="#从脚本网站加载脚本"></a> 从脚本网站加载脚本</h2><h3 id="greasyfork"><a class="markdownIt-Anchor" href="#greasyfork"></a> GreasyFork</h3><p><strong>通过链接打开</strong></p><p><a href="https://greasyfork.org/zh-CN">Greasy Fork - 安全、实用的用户脚本大全</a></p><p><strong>通过油猴插件打开</strong></p><p>点击插件，选择&quot;获取新脚本&quot;</p><p><img src="/img/image-20210808174148253.png" alt="image-20210808174148253" /></p><p>然后在下面找到并点选GreasyFork链接</p><p><img src="/img/image-20210808174315114.png" alt="image-20210808174315114" /></p><p>搜索自己需要的插件即可</p><h3 id="找脚本"><a class="markdownIt-Anchor" href="#找脚本"></a> 找脚本</h3><p><strong>通过链接打开</strong></p><p><a href="https://www.zhaojiaoben.cn/">找脚本——找任何你需要的脚本 (zhaojiaoben.cn)</a></p><p>搜索自己需要的插件即可</p><h2 id="安装脚本"><a class="markdownIt-Anchor" href="#安装脚本"></a> 安装脚本</h2><p>上面两个脚本网站安装脚本时都会弹出新界面，点击安装即可</p><p><strong>我们以刷课脚本为例</strong></p><p>打开<a href="https://www.zhaojiaoben.cn/">找脚本——找任何你需要的脚本 (zhaojiaoben.cn)</a></p><p>首页就有该脚本，点击直接安装</p><p><img src="/img/image-20210808175933672.png" alt="image-20210808175933672" /></p><p>然后在弹出的界面选择安装即可</p><h2 id="管理脚本"><a class="markdownIt-Anchor" href="#管理脚本"></a> 管理脚本</h2><p>当脚本安装后，到可用网页会自动生效，油猴插件图标会自动亮起</p><p><img src="/img/image-20210808174913530.png" alt="image-20210808174913530" /></p><p>我们点击插件后，可以管理当前页面生效的脚本，也可以点击&quot;管理面板&quot;管理所有脚本</p><p><img src="/img/image-20210808174955539.png" alt="image-20210808174955539" /></p>]]></content>
    
    
    
    <tags>
      
      <tag>实用</tag>
      
      <tag>Tampermonkey</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[nginx]nginx部署实战</title>
    <link href="/2021/08/07/%5Bnginx%5Dnginx%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98/"/>
    <url>/2021/08/07/%5Bnginx%5Dnginx%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98/</url>
    
    <content type="html"><![CDATA[<p>本文将演示如何在ubuntu上部署nginx，并实现对以 <a href="http://rank.allenji.cn">rank.allenji.cn</a> 为例的前后端分发和 https部署</p><span id="more"></span><h2 id="安装nginx"><a class="markdownIt-Anchor" href="#安装nginx"></a> 安装nginx</h2><p>使用命令行安装nginx</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">sudo apt <span class="hljs-keyword">install</span> nginx<br></code></pre></td></tr></table></figure><h2 id="配置nginx"><a class="markdownIt-Anchor" href="#配置nginx"></a> 配置nginx</h2><p><strong>进入目录</strong></p><p>进入nginx默认安装目录: /etc/nginx</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/etc/</span>nginx<br></code></pre></td></tr></table></figure><p><img src="/img/image-20210807132620388.png" alt="image-20210807132620388" /></p><p>这时打开“nginx.conf&quot;</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">sudo <span class="hljs-keyword">vim</span> nginx.<span class="hljs-keyword">conf</span><br></code></pre></td></tr></table></figure><p>文档内容如下:</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">user</span> www-data;<br><span class="hljs-attribute">worker_processes</span> auto;<br><span class="hljs-attribute">pid</span> /run/nginx.pid;<br><span class="hljs-attribute">include</span> /etc/nginx/modules-enabled/<span class="hljs-regexp">*.conf</span>;<br><br><span class="hljs-section">events</span> &#123;<br>        <span class="hljs-attribute">worker_connections</span> <span class="hljs-number">768</span>;<br>        <span class="hljs-comment"># multi_accept on;</span><br>&#125;<br><br><span class="hljs-section">http</span> &#123;<br><br>        <span class="hljs-comment">##</span><br>        <span class="hljs-comment"># Basic Settings</span><br>        <span class="hljs-comment">##</span><br><br>        <span class="hljs-attribute">sendfile</span> <span class="hljs-literal">on</span>;<br>        <span class="hljs-attribute">tcp_nopush</span> <span class="hljs-literal">on</span>;<br>        <span class="hljs-attribute">tcp_nodelay</span> <span class="hljs-literal">on</span>;<br>        <span class="hljs-attribute">keepalive_timeout</span> <span class="hljs-number">65</span>;<br>        <span class="hljs-attribute">types_hash_max_size</span> <span class="hljs-number">2048</span>;<br>        <span class="hljs-comment"># server_tokens off;</span><br><br>        <span class="hljs-comment"># server_names_hash_bucket_size 64;</span><br>        <span class="hljs-attribute">include</span> /etc/nginx/mime.types;<br>        <span class="hljs-attribute">default_type</span> application/octet-stream;<br><br>        <span class="hljs-comment">##</span><br><br>        <span class="hljs-attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span> TLSv1.<span class="hljs-number">3</span>; <span class="hljs-comment"># Dropping SSLv3, ref: POODLE</span><br>        <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br><br>        <span class="hljs-comment">##</span><br>        <span class="hljs-comment"># Logging Settings</span><br>        <span class="hljs-comment">##</span><br><br>        <span class="hljs-attribute">access_log</span> /var/log/nginx/access.log;<br>        <span class="hljs-attribute">error_log</span> /var/log/nginx/error.log;<br><br>        <span class="hljs-comment">##</span><br>        <span class="hljs-comment"># Gzip Settings</span><br>        <span class="hljs-comment">##</span><br><br>        <span class="hljs-attribute">gzip</span> <span class="hljs-literal">on</span>;<br><br>        <span class="hljs-comment"># gzip_vary on;</span><br>        <span class="hljs-comment"># gzip_proxied any;</span><br>        <span class="hljs-comment"># gzip_comp_level 6;</span><br>        <span class="hljs-comment"># gzip_buffers 16 8k;</span><br>        <span class="hljs-comment"># gzip_http_version 1.1;</span><br><br>        <span class="hljs-comment">##</span><br>        <span class="hljs-comment"># Virtual Host Configs</span><br>        <span class="hljs-comment">##</span><br><br>        <span class="hljs-attribute">include</span> /etc/nginx/conf.d/<span class="hljs-regexp">*.conf</span>;<br>        <span class="hljs-attribute">include</span> /etc/nginx/sites-enabled/*;<br>&#125;<br><br><br><span class="hljs-comment">#mail &#123;</span><br><span class="hljs-comment">#       # See sample authentication script at:</span><br><span class="hljs-comment">#       # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#       # auth_http localhost/auth.php;</span><br><span class="hljs-comment">#       # pop3_capabilities &quot;TOP&quot; &quot;USER&quot;;</span><br><span class="hljs-comment">#       # imap_capabilities &quot;IMAP4rev1&quot; &quot;UIDPLUS&quot;;</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#       server &#123;</span><br><span class="hljs-comment">#               listen     localhost:110;</span><br><span class="hljs-comment">#               protocol   pop3;</span><br><span class="hljs-comment">#               proxy      on;</span><br><span class="hljs-comment">#       &#125;</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#       server &#123;</span><br><span class="hljs-comment">#               listen     localhost:143;</span><br><span class="hljs-comment">#               protocol   imap;</span><br><span class="hljs-comment">#               proxy      on;</span><br><span class="hljs-comment">#       &#125;</span><br><span class="hljs-comment">#&#125;</span><br></code></pre></td></tr></table></figure><p>由</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">include</span> <span class="hljs-regexp">/etc/</span>nginx<span class="hljs-regexp">/conf.d/</span>*.conf;<br><span class="hljs-keyword">include</span> <span class="hljs-regexp">/etc/</span>nginx<span class="hljs-regexp">/sites-enabled/</span>*;<br></code></pre></td></tr></table></figure><p>这两行可知，配置文件定义在这两个文件夹里</p><p><strong>进入次级目录</strong></p><p>为了方便管理，我们进入&quot;site-enabled&quot;目录并分站点定义配置文件</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">cd</span> sites-enabled<br>sudo touch rank.<span class="hljs-keyword">conf</span><br>sudo <span class="hljs-keyword">vim</span> rank.<span class="hljs-keyword">conf</span><br></code></pre></td></tr></table></figure><p>我们将rank.conf写成这样</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br><span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl;<span class="hljs-comment">#听ssl端口</span><br><span class="hljs-attribute">server_name</span> rank.allenji.cn;<span class="hljs-comment">#站点名</span><br><span class="hljs-attribute">root</span> /home/wwwroot/rank;<span class="hljs-comment">#站点静态单页地址</span><br><span class="hljs-attribute">location</span> / &#123;<br><span class="hljs-attribute">index</span> index.html;<span class="hljs-comment">#站点单页的index.html</span><br>&#125;<br><span class="hljs-attribute">location</span> /api/ &#123;<br><span class="hljs-attribute">proxy_pass</span> https://localhost:8080; <span class="hljs-comment">#将/api的请求转发到后端接口</span><br>&#125;<br><br><br><span class="hljs-comment">#ssl配置 请参考各大服务器运营商的ssl部署教程</span><br><br><span class="hljs-attribute">ssl_certificate</span> ssl/1_rank.allenji.cn_bundle.crt;<br><span class="hljs-attribute">ssl_certificate_key</span> ssl/2_rank.allenji.cn.key;<br><span class="hljs-attribute">ssl_session_timeout</span> <span class="hljs-number">5m</span>;<br><span class="hljs-attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span>;<br><span class="hljs-attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;<br><span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br><br>&#125;<br><br><span class="hljs-section">server</span> &#123;<span class="hljs-comment">#强制将http访问的请求转发到https</span><br><span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br><span class="hljs-attribute">server_name</span> rank.allenji.cn;<br><span class="hljs-attribute">return</span> <span class="hljs-number">301</span> https://$host$request_uri;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>如上，站点的conf就配置完毕了</p><p><strong>重载配置文件</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo nginx -s reload</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>nginx</tag>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[cpp]单调栈</title>
    <link href="/2021/07/14/%5Bcpp%5D%E5%8D%95%E8%B0%83%E6%A0%88/"/>
    <url>/2021/07/14/%5Bcpp%5D%E5%8D%95%E8%B0%83%E6%A0%88/</url>
    
    <content type="html"><![CDATA[<p><strong>何为单调栈？</strong><br />顾名思义，就是单调的栈，我们维护一个栈，栈中的元素保持非严格单调递增或递减。<br />此算法在处理一些问题时莫名其妙（雾）的有效，是一个典型的空间换时间的算法。</p><span id="more"></span><h2 id="1-最大的矩形-csp201312-3-leetcode-84"><a class="markdownIt-Anchor" href="#1-最大的矩形-csp201312-3-leetcode-84"></a> 1. 最大的矩形 [CSP]201312-3 / [LeetCode] 84.</h2><p>问题描述<br />在横轴上放了n个相邻的矩形，每个矩形的宽度是1，而第i（1 ≤ i ≤ n）个矩形的高度是hi。这n个矩形构成了一个直方图。例如，下图中六个矩形的高度就分别是3, 1, 6, 5, 2, 3。<br /><img src="https://img-blog.csdnimg.cn/2020121717482394.png" alt="" /></p><p>请找出能放在给定直方图里面积最大的矩形，它的边要与坐标轴平行。对于上面给出的例子，最大矩形如下图所示的阴影部分，面积是10。<br /><img src="https://img-blog.csdnimg.cn/20201217174844858.png" alt="" /></p><p><strong>输入格式</strong><br />第一行包含一个整数n，即矩形的数量(1 ≤ n ≤ 1000)。<br />第二行包含n 个整数h1, h2, … , hn，相邻的数之间由空格分隔。(1 ≤ hi ≤ 10000)。hi是第i个矩形的高度。<br />　　<br /><strong>输出格式</strong><br />输出一行，包含一个整数，即给定直方图内的最大矩形的面积。<br />　　<br /><strong>样例输入</strong><br />6<br />3 1 6 5 2 3</p><p><strong>样例输出</strong><br />10</p><p><strong>题解</strong><br />我们可以维持一个单调递增的栈，为了便于计算矩形宽度，我们在栈里存放单个矩形的位置。<br />我们从左到右遍历高度数组，对于每个矩形的高度p，如果p大于等于当前栈顶储存位置的高度q，我们将p的位置也压入栈中；<br />如果p小于q，我们将q弹出，纪录高度，并记录当前遍历到的矩形p与新栈顶位置之差(实际上还需要减1)，作为宽度，并更新结果。<br />为避免栈中剩余矩形，我们可以在数组尾插入一个高度为零的矩形，使栈中所有矩形弹出并更新。</p><p><strong>代码实现</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">largestRectangleArea</span><span class="hljs-params">(vector&lt;<span class="hljs-keyword">int</span>&gt;&amp; heights)</span> </span>&#123;<br>heights.<span class="hljs-built_in">push_back</span>(<span class="hljs-number">0</span>);<span class="hljs-comment">//插入空矩形，弹出栈中剩余矩形</span><br><span class="hljs-keyword">int</span> len = heights.<span class="hljs-built_in">size</span>(), area = <span class="hljs-number">0</span>, pre_index, height, width;<br>stack&lt;<span class="hljs-keyword">int</span>&gt; indices;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; len; i++) &#123;<br><span class="hljs-keyword">while</span> (!indices.<span class="hljs-built_in">empty</span>() &amp;&amp; heights[indices.<span class="hljs-built_in">top</span>()] &gt; heights[i]) &#123;<span class="hljs-comment">//检查栈是否为空</span><br>pre_index = indices.<span class="hljs-built_in">top</span>();<span class="hljs-comment">//储存栈顶矩形的位置</span><br>indices.<span class="hljs-built_in">pop</span>();<br>height = heights[pre_index];<span class="hljs-comment">//储存高度</span><br><span class="hljs-keyword">if</span> (indices.<span class="hljs-built_in">empty</span>()) &#123;<span class="hljs-comment">//避免操作空栈</span><br>width = i;<span class="hljs-comment">//若弹出至栈为空，因栈的递增性，边界可向左延伸至0</span><br>&#125; <span class="hljs-keyword">else</span> &#123;<br>width = i - indices.<span class="hljs-built_in">top</span>() - <span class="hljs-number">1</span>;<span class="hljs-comment">//储存宽度</span><br>&#125;<br>area = area &gt; (width * height) ? area : (width * height);<span class="hljs-comment">//更新结果</span><br>&#125;<br>indices.<span class="hljs-built_in">push</span>(i);<br>&#125;<br><span class="hljs-keyword">return</span> area;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2每日温度-leetcode-739"><a class="markdownIt-Anchor" href="#2每日温度-leetcode-739"></a> 2.每日温度 [LeetCode] 739.</h2><p><strong>问题描述</strong></p><p>请根据每日 气温 列表，重新生成一个列表。对应位置的输出为：要想观测到更高的气温，至少需要等待的天数。如果气温在这之后都不会升高，请在该位置用 0 来代替。<br />例如，给定一个列表 temperatures = [73, 74, 75, 71, 69, 72, 76, 73]，你的输出应该是 [1, 1, 4, 2, 1, 1, 0, 0]。<br />提示：气温 列表长度的范围是 [1, 30000]。每个气温的值的均为华氏度，都是在 [30, 100] 范围内的整数。</p><p><strong>题解</strong></p><p>我们在这里维持一个单调递减的栈，为了便于计算天数差，我们在栈中储存位置(即日期)。<br />此题相较上题简单一些，故不在此赘述。<br /><strong>注意：</strong><br />此题与上题不同的是，若栈中有剩余的日期，说明此后没有更暖和的日期，故无需再弹出。</p><p><strong>代码实现</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">vector&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">dailyTemperatures</span><span class="hljs-params">(vector&lt;<span class="hljs-keyword">int</span>&gt;&amp; T)</span> </span>&#123;<br><span class="hljs-keyword">int</span> n = T.<span class="hljs-built_in">size</span>(), pre_index;<br><span class="hljs-function">vector&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">ans</span><span class="hljs-params">(n)</span></span>;<br>stack&lt;<span class="hljs-keyword">int</span>&gt; indices;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br><span class="hljs-keyword">while</span> (!indices.<span class="hljs-built_in">empty</span>() &amp;&amp; T[indices.<span class="hljs-built_in">top</span>()] &lt; T[i]) &#123;<br>pre_index = indices.<span class="hljs-built_in">top</span>();<br>indices.<span class="hljs-built_in">pop</span>();<br>ans[pre_index] = i - pre_index;<span class="hljs-comment">//计算日期差</span><br>&#125;<br>indices.<span class="hljs-built_in">push</span>(i);<br>&#125;<br><span class="hljs-keyword">return</span> ans;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>cpp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[cpp]gcd&amp;lcm</title>
    <link href="/2021/07/13/%5Bcpp%5Dgcd&amp;lcm/"/>
    <url>/2021/07/13/%5Bcpp%5Dgcd&amp;lcm/</url>
    
    <content type="html"><![CDATA[<p>写了一万年这俩算法，还是记不住，这次强化记忆一下</p><span id="more"></span><h2 id="gcd"><a class="markdownIt-Anchor" href="#gcd"></a> GCD</h2><h3 id="基础循环"><a class="markdownIt-Anchor" href="#基础循环"></a> 基础循环</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">gcd</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a,<span class="hljs-keyword">int</span> b)</span></span>&#123;<br><span class="hljs-keyword">int</span> r;<br>    <span class="hljs-keyword">while</span>(b&gt;<span class="hljs-number">0</span>) &#123;<br>        r=a%b;<br>        a=b;<br>        b=r;<br>    &#125;<br>    <span class="hljs-keyword">return</span> a;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="位运算"><a class="markdownIt-Anchor" href="#位运算"></a> 位运算</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">gcd</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a,<span class="hljs-keyword">int</span> b)</span> </span>&#123;<br>    <span class="hljs-keyword">while</span> (b^=a^=b^=a%=b);  <span class="hljs-comment">//a%=b,swap(a,b)</span><br>    <span class="hljs-keyword">return</span> a;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="gcd库函数"><a class="markdownIt-Anchor" href="#gcd库函数"></a> gcd库函数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">gcd</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a,<span class="hljs-keyword">int</span> b)</span> </span>&#123;<br><span class="hljs-keyword">return</span> __gcd(a,b);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="lcm"><a class="markdownIt-Anchor" href="#lcm"></a> LCM</h2><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>∗</mo><mi>b</mi><mo>=</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>l</mi><mi>c</mi><mi>m</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a*b = gcd(a,b) * lcm(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">c</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">c</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span></span></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">lcm</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a,<span class="hljs-keyword">int</span> b)</span></span>&#123;<br><span class="hljs-keyword">return</span> a*b/<span class="hljs-built_in">gcd</span>(x,y);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>cpp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/07/11/hello-world/"/>
    <url>/2021/07/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
